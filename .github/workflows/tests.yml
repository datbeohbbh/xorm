name: tests
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  unit:
    concurrency:
      group: unit-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Test
        run: |
          make test
  test-postgres:
    concurrency:
      group: test-postgres-integration-secure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    services:
      pgsql:
        image: postgres:9.5
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: xorm_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      TEST_PGSQL_HOST: 'localhost:5432'
      TEST_PGSQL_SCHEMA: xorm
      TEST_PGSQL_DBNAME: xorm_test
      TEST_PGSQL_USERNAME: postgres
      TEST_PGSQL_PASSWORD: postgres
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: test postgres
        run: |
          TEST_CACHE_ENABLE=true make test-postgres
  test-ydb-secure-connection:
    concurrency:
      group: test-ydb-secure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:stable-22-5-slim
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      TEST_YDB_SCHEME: grpcs
      TEST_YDB_HOST: localhost:2135
      TEST_YDB_DBNAME: local
      OS: ${{ matrix.os }}
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
      YDB_SESSIONS_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
      HIDE_APPLICATION_OUTPUT: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: ydb integration test
        run: |
          [ -d "./integrations/ydbtest" ] && \
          make test-ydb
  test-ydb-insecure-connection:
    concurrency:
      group: test-ydb-insecure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:stable-22-5-slim
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      TEST_YDB_SCHEME: grpc
      TEST_YDB_HOST: localhost:2136
      TEST_YDB_DBNAME: local
      OS: ${{ matrix.os }}
      YDB_SESSIONS_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
      HIDE_APPLICATION_OUTPUT: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: ydb test insecure connection
        run: |
          [ -d "./integrations/ydbtest" ] && \
          make test-ydb

name: tests
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  unit:
    concurrency:
      group: unit-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Test
        run: | 
          sleep 5
          make test
  test-postgres:
    concurrency:
      group: test-postgres-integration-secure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x, 1.19.x, 1.20.x]
        os: [ubuntu-latest]
    services:
      pgsql:
        image: postgres:9.5
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: xorm_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env:
      OS: ${{ matrix.os }}
      TEST_PGSQL_SCHEMA: xorm
      TEST_PGSQL_DBNAME: xorm_test
      TEST_PGSQL_USERNAME: postgres
      TEST_PGSQL_PASSWORD: postgres
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: test postgres
        run: |
          sleep 5
          TEST_CACHE_ENABLE=true make test-postgres
#  test-ydb-integration-secure-connection:
#    concurrency:
#      group: test-ydb-integration-secure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
#      cancel-in-progress: true
#    strategy:
#      matrix:
#        go-version: [1.16.x, 1.19.x, 1.20.x]
#        os: [ubuntu-latest]
#    services:
#      ydb:
#        image: cr.yandex/yc/yandex-docker-local-ydb:stable-22-5-slim
#        ports:
#          - 2135:2135
#          - 2136:2136
#          - 8765:8765
#        volumes:
#          - /tmp/ydb_certs:/ydb_certs
#        env:
#          YDB_LOCAL_SURVIVE_RESTART: true
#          YDB_USE_IN_MEMORY_PDISKS: true
#        options: '-h localhost'
#    env:
#      OS: ${{ matrix.os }}
#      GO: ${{ matrix.go-version }}
#      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
#      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
#      YDB_SESSIONS_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
#      HIDE_APPLICATION_OUTPUT: 1
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Install Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ matrix.go-version }}
#          cache: true
#      - name: ydb integration test
#        run: go test -race -coverpkg=./... -coverprofile integration-secure.txt -covermode atomic ./tests/integration
#  test-ydb-integration-insecure-connection:
#    concurrency:
#      group: test-ydb-integration-insecure-connection-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
#      cancel-in-progress: true
#    strategy:
#      matrix:
#        go-version: [1.16.x, 1.19.x, 1.20.x]
#        os: [ubuntu-latest]
#    services:
#      ydb:
#        image: cr.yandex/yc/yandex-docker-local-ydb:stable-22-5-slim
#        ports:
#          - 2135:2135
#          - 2136:2136
#          - 8765:8765
#        volumes:
#          - /tmp/ydb_certs:/ydb_certs
#        env:
#          YDB_LOCAL_SURVIVE_RESTART: true
#          YDB_USE_IN_MEMORY_PDISKS: true
#        options: '-h localhost'
#    env:
#      OS: ${{ matrix.os }}
#      GO: ${{ matrix.go-version }}
#      YDB_CONNECTION_STRING: grpc://localhost:2136/local
#      YDB_SESSIONS_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
#      HIDE_APPLICATION_OUTPUT: 1
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Install Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ matrix.go-version }}
#          cache: true
#      - name: ydb test insecure connection
#        run: go test -race -coverpkg=./... -coverprofile integration-insecure.txt -covermode atomic ./tests/integration
